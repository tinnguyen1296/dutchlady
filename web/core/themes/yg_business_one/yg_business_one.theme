<?php
use Drupal\Component\Utility\Xss;
use Drupal\Core\Render\Element;
use Drupal\Core\Template\Attribute;
use Drupal\Component\Utility\SafeMarkup;
use Drupal\file\Plugin\Core\Entity\FileInterface;
use Drupal\paragraphs\Entity\Paragraph;

function yg_business_one_preprocess_html(&$variables) {
  // Add information about the number of sidebars.
}



/**
 * Implements hook_preprocess_menu().
 */
function yg_business_one_preprocess_menu(&$variables, $hook) {
    // $product_types = \Drupal\commerce_product\Entity\ProductType::loadMultiple();
    // kint($product_types["co_gai_ha_lan"]->getDescription());
//    dump(1);die;
    if ($hook == 'menu__main') { // We're doing that for main menu.
//        kint($variables['items']['menu_link_content:7b72e8a7-4937-4549-a312-c00db76124dd']);
        // Get the current path
//        standard.front_page
    if($variables['items']['commerce_base.front_page']) {
        $variables['theme_path'] = base_path() . $variables['directory'];
        $logo = $variables['theme_path'] . '/logo.png';
        $variables['items']['commerce_base.front_page']['title'] = array(
            '#markup' => "<div class=\"wrapper-logo\">
                <div class=\"logo\">
                    <img src= $logo>
                </div>
            </div> "
        );
    }
    $current_path = \Drupal::request()->getRequestUri();
    $items = $variables['items'];
    foreach ($items as $key => $item) {
      // If path is current_path, set active to li.
      if ($item['url']->toString() == $current_path) {
        // Add active link.
        $variables['items'][$key]['attributes']['class'] = 'active';
      }
    }
  }
}


function yg_business_one_preprocess_page(&$variables) {


  $variables['basepath'] = $GLOBALS['base_url'];
  $variables['logopath'] = $variables['basepath'] . '/' . drupal_get_path('theme','yg_business_one') . '/logo.png';
  $variables['yg_business_one_Template'] = theme_get_setting('yg_business_one_Template');
  $variables['drupal_developers'] = theme_get_setting('drupal_developers');
  $variables['youngglobes'] = theme_get_setting('youngglobes');
  $variables['twitter'] = theme_get_setting('twitter');
  $variables['facebook'] = theme_get_setting('facebook');
  $variables['youtube'] = theme_get_setting('youtube');
  $variables['instagram'] = theme_get_setting('instagram');
  $variables['googleplus'] = theme_get_setting('googleplus');
  $variables['pintrest'] = theme_get_setting('pintrest');
//    dump($variables['logopath']);
}


function yg_business_one_form_system_theme_settings_alter(&$form, \Drupal\Core\Form\FormStateInterface &$form_state, $form_id = NULL) {
  // Work-around for a core bug affecting admin themes. See issue #943212.



 $form['drushup_settings']['footer'] = array(
    '#type' => 'details',
    '#title' => t('Theme Settings'),
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
  );

 $form['drushup_settings']['footer']['yg_business_one_Template'] = array(
    '#type'          => 'textfield',
    '#title'         => t('yg_business_one_Template'),
    '#default_value' => theme_get_setting('yg_business_one_Template'),
    '#description'   => t("Place this text in the widget spot on your site."),
  );

$form['drushup_settings']['footer']['drupal_developers'] = array(
    '#type'          => 'textfield',
    '#title'         => t('drupal_developers'),
    '#default_value' => theme_get_setting('drupal_developers'),
    '#description'   => t("Place this text in the widget spot on your site."),
  );

  $form ['drushup_settings']['footer']['youngglobes'] = array(
    '#type'          => 'textfield',
    '#title'         => t('youngglobes'),
    '#default_value' => theme_get_setting('youngglobes'),
    '#description'   => t("Place this text in the widget spot on your site."),
  );


   $form ['drushup_settings']['footer']['twitter'] = array(
    '#type'          => 'textfield',
    '#title'         => t('twitter'),
    '#default_value' => theme_get_setting('twitter'),
    '#description'   => t("Place this text in the widget spot on your site."),
  );

  $form ['drushup_settings']['footer']['facebook'] = array(
    '#type'          => 'textfield',
    '#title'         => t('facebook'),
    '#default_value' => theme_get_setting('facebook'),
    '#description'   => t("Place this text in the widget spot on your site."),
  );



  $form ['drushup_settings']['footer']['instagram'] = array(
    '#type'          => 'textfield',
    '#title'         => t('instagram'),
    '#default_value' => theme_get_setting('instagram'),
    '#description'   => t("Place this text in the widget spot on your site."),
  );


  $form ['drushup_settings']['footer']['googleplus'] = array(
    '#type'          => 'textfield',
    '#title'         => t('googleplus'),
    '#default_value' => theme_get_setting('googleplus'),
    '#description'   => t("Place this text in the widget spot on your site."),
  );


  $form ['drushup_settings']['footer']['pintrest'] = array(
    '#type'          => 'textfield',
    '#title'         => t('pintrest'),
    '#default_value' => theme_get_setting('pintrest'),
    '#description'   => t("Place this text in the widget spot on your site."),
  );


}
/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function yg_business_one_theme_suggestions_page_alter(array &$suggestions, array $variables) {
  // Get Request Object.
  $request = \Drupal::request();

  // If there is HTTP Exception..
  if ($exception = $request->attributes->get('exception')) {
    // Get the status code.
    $status_code = $exception->getStatusCode();
    if (in_array($status_code, array(401, 403, 404))) {
      $suggestions[] = 'page__' . $status_code;
    }
  }
}

function yg_business_one_theme(&$existing, $type, $theme, $path) {
  $hooks = array();
  $hooks['user_login_form'] = array(
      'render element' => 'form',
      'template' => 'user-login-form',
  );
  return $hooks;
}

function yg_business_one_preprocess_breadcrumb(&$variables)
{
    $variables['breadcrumb'][0]['text'] = 'Trang chá»§';
    $node = \Drupal::routeMatch()->getParameter('node');
    $current_path = \Drupal::service('path.current')->getPath();
    $result = \Drupal::service('path.alias_manager')->getAliasByPath($current_path);
    $crumbs = explode("/", $result);
    if ($node) {
        $variables['current_title'] = $node->getTitle();
        $variables['crumbs'] = $crumbs;
    }
}

function yg_business_one_preprocess_region(&$variables) {


    // Create the $content variable that templates expect.
    $variables['content'] = $variables['elements']['#children'];
    $variables['region'] = $variables['elements']['#region'];
    if($variables['region'] == 'footer_col_4') {
        $block1 = $variables['elements']['tintucsukien']['#children'];
//        dump($block1);
        $block2 = $variables['elements']['cactrangkhac']['#children'];

        $footer_region_4 = [$block1, $block2];
       $variables['footer_region_4'] = $footer_region_4;
    }

}

function yg_business_one_preprocess_commerce_product(&$variables) {
//    $product = $variables['elements']['#commerce_product'];
    $product = $variables['elements']['#commerce_product'];
    $variables['product_url'] = $product->isNew() ? '' : $product->toUrl();
    $variables['product'] = [];
    $variables['product']['id'] = $product->id();
    foreach (Element::children($variables['elements']) as $key) {
        $variables['product'][$key] = $variables['elements'][$key];
    }

    if($product->hasField('field_videos')) {
        $wrapper_videos = $product->get('field_videos');

        $paragraph = $wrapper_videos->getValue();
        if(!empty($paragraph)) {
            $paragraph_id = $paragraph[0]['target_id'];
            $data = Paragraph::load($paragraph_id);
            $data_image = $data->get('field_image')->getValue();
            if(!empty($data_image)) {
                $fid = $data_image[0]['target_id'];//The file ID
                $file = \Drupal\file\Entity\File::load($fid);
                $path = $file->getFileUri();
                $url_image = file_create_url($path);

                $alt = $data_image[0]['alt'];
                $title = $data_image[0]['title'];

                $image_video = [
                    'alt' => $alt,
                    'title' => $title,
                    'image' => $url_image,
                ];
                $variables['image_video'] = $image_video;
            }

        }
    }

    if($product->hasField('field_image_other')) {
        $images_other = $product->get('field_image_other')->getValue();
        if(!empty($images_other)) {
            $arr_image_other = [];
            foreach($images_other as $index => $image) {
                $fid = $image['target_id'];//The file ID
                $file = \Drupal\file\Entity\File::load($fid);
                $path = $file->getFileUri();
                $url_image = file_create_url($path);
                $arr_image_other[] = [
                    'url' => $url_image,
                    'index' => $index % 6,
                ];
            }
            $variables['images_other'] = $arr_image_other;
        }
    }





    $variations = $product->getVariations();

    $view_mode = $variables['elements']['#view_mode'];
    //TODO:: GET Product Variations
    if($view_mode == 'full') {
        $data_variations = [];
        foreach($variations as $variation) {
            // Get title
//            kint($variation);die;
            $title = $variation->get('field_title')->getValue();

            // Get image
            $images = $variation->get('field_image')->getValue();
            $arr_image = [];
            foreach($images as $image) {

                $fid = $image['target_id'];//The file ID
                $file = \Drupal\file\Entity\File::load($fid);
                if(isset($file)) {
                    $path = $file->getFileUri();
                    $url_image = file_create_url($path);
                    $arr_image[] = $url_image;
                }

            }

            $arr_image_detail = [];
            if($variation->hasField('field_image_detail')) {
                $detail_images = $variation->get('field_image_detail')->getValue();
                if(!empty($detail_images)) {
                    foreach($detail_images as $image) {
                        $fid = $image['target_id'];//The file ID
                        $file = \Drupal\file\Entity\File::load($fid);
                        if(isset($file)) {
                            $path = $file->getFileUri();
                            $url_image_detail = file_create_url($path);
                            $arr_image_detail[] = $url_image_detail;
                        }

                    }
                }
            }


            // Get capacity
            if($variation->hasField('field_capacity')) {
                $container = $variation->get('field_capacity');
                $list = [];
                $capacities = [];
                foreach($container as $item) {
                    $target_id = $item->getValue()['target_id'];

                    $paragraph = Paragraph::load($target_id);

                    $image = $paragraph->get('field_image')->getValue();
                    $fid = !empty($image) ? $image[0]['target_id'] : null;//The file ID
                    $file = !empty($fid) ? \Drupal\file\Entity\File::load($fid) : null;
                    if(isset($file)) {
                        $path = $file->getFileUri();
                        $url_image_detail_other = file_create_url($path);
                        $value = $paragraph->get('field_value')->getValue()[0]['value'];
                        $capacities[] = [
                            'image' => $url_image_detail_other,
                            'value' => $value
                        ];
                    }

                }

            }


            // Get public profile
            if($variation->hasField('field_public_profile')) {
                $link_profiles = $variation->get('field_public_profile')->getValue();
                $url_profile = [];
                foreach($link_profiles as $link) {
                    $fid = $link['target_id'];//The file ID
                    $file = \Drupal\file\Entity\File::load($fid);
                    $path = $file->getFileUri();
                    $url_profile[] = [
                        'url' => file_create_url($path),
                        'description' => $link['description'],
                    ];
                }
            }


            // Get product information
            $arr_field = $variation->getFieldDefinitions();
//            dump($arr_field);die;
            $paragraph_product_information = ['field_vitamin', 'field_chat_khoang', 'field_detail'];
            $information = [];

            foreach($paragraph_product_information as $field) {

                if(isset($arr_field[$field]))
                {
                    if($variation->hasField($field)) {
                        $container = $variation->get($field);
                        $list = [];

                        foreach($container as $item) {


                            $target_id = $item->getValue()['target_id'];
//                        dump($target_id);
                            $paragraph = Paragraph::load($target_id);

                            if(isset($paragraph)) {
                                $key = $paragraph->get('field_key')->getValue()[0]['value'];
                                $value = $paragraph->get('field_value')->getValue()[0]['value'];
                                $list[] = [
                                    'key' => $key,
                                    'value' => $value,
                                ];
                            }

                        }
                        $information[substr($field, 6)] = $list;
                    }

                }
            }

            $information_other = [];

            if(isset($arr_field['field_content_detail'])) {
                $container = $variation->get('field_content_detail');
                foreach($container as $item) {
                    $target_id = $item->getValue()['target_id'];

                    $paragraph = Paragraph::load($target_id);

                    $image = $paragraph->get('field_image')->getValue();
                    $fid = $image[0]['target_id'];//The file ID
                    $file = \Drupal\file\Entity\File::load($fid);
                    $path = $file->getFileUri();

                    $url_image_detail_other = file_create_url($path);
                    $content = $paragraph->get('field_content')->getValue()[0]['value'];
                    $information_other[] = [
                        'image' => $url_image_detail_other,
                        'content' => $content
                    ];
                }
//                $information_other['field_content_detail'] = $list;
            }

            //TODO:: Data Variations
            $data_variations[] = array(
                'title' => $title[0]['value'],
                'image' => $arr_image,
                'image_detail' => $arr_image_detail,
                'capacities' => isset($capacities) ? $capacities : '',
                'profiles' => isset($url_profile) ? $url_profile : '',
                'information' => isset($information) ? $information : '',
                'information_other' => isset($information_other) ? $information_other : '',
            );
        }
        // dump($data_variations);
        // die;
//        dump($data_variations);die;
        $variables['product_variations'] = $data_variations;
        $variables['#attached']['drupalSettings']['variations'] =  json_encode($data_variations);
    }

}

?>
